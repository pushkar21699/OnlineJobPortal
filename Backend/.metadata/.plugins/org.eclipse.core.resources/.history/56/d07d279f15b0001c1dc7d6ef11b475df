package com.app.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.Education;
import com.app.dto.JobSeekerRegistration;
import com.app.dto.ProfileDetail;
import com.app.services.IJobSeekerService;
import com.app.services.ILoginService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/jobseeker")
public class JobSeekerController {

	// ********************all Job Seeker functionalities************************
	// 1. Search for job : by city, by skillSets , by city + skillsets, by company
	// 2. Apply for job :
	// 3. upload resume
	// 4. update profile
	// 5. update/insert education details
	// 6. update/insert experience details
	// 7. update/insert skillSets
	// 8. upload profile photo
	// 9. Register -> done
	// 10. Login -> done

	// injection dependency
	@Autowired
	private IJobSeekerService jobSeekerService;

	@Autowired
	private ILoginService loginService;

	// add a request handling method to register the jobSeeker
	@PostMapping("/register")
	public String registerJobSeeker(@RequestBody JobSeekerRegistration register) // de-marshelled : json to java convert
																					// and store into
																					// JobSeekerRegistration object to
																					// trnasfer between other layers
	{
		System.out.println("in JobSeekerController : " + register);
		// invoke JobSeekerSrvice layer JobSeekerRegistration
		return jobSeekerService.JobSeekerRegistration(register);

	}

	// get jobseeker details
	@GetMapping("/{id}")
	public ResponseEntity<?> getJobseekerDetails(@PathVariable int id) {
		System.out.println("In getJobseekerDetails");

		return new ResponseEntity<>(jobSeekerService.getJobSeeker(id), HttpStatus.OK);
	}

	// add a method to get all jobSeeker details
	@GetMapping("/details")
	public ResponseEntity<?> getAllJobSeekerDetails() {
		System.out.println("in getAllJobSeekerDetails : ");
		return new ResponseEntity<>(jobSeekerService.getAllJobSeeker(), HttpStatus.OK);
	}

	// add a method to add jobseeker profile info
	@PostMapping("/profile")
	public String addProfileDetails(@RequestBody ProfileDetail details) {
		return jobSeekerService.jobSeekerProfileDetails(details);
	}

	// add a method to delete the job seeker details by id
	@DeleteMapping("/{id}")
	public String deleteJobSeeker(@PathVariable int id) {
		System.out.println("in delete job seeker details: ");

		// delete job seeker details and then login details
		jobSeekerService.deleteJobSeeker(id);

		loginService.deleteLoginDetails(id);

		return "Job seeker info deleted with id " + id;
	}

//	//// //add a method to update/insert education details ////
//	@PostMapping("/education/{id}") 
//	public ResponseEntity<?> addEducationDetails(@RequestBody Education education)
//	{
//		//// System.out.println("in add education deatils"); ////
//	  Education edu=  jobSeekerService.addOrUpdateEducationDetails(education);
//	  return new ResponseEntity<>(edu, HttpStatus.OK);
//	 }

	//add a method to get education details
	@GetMapping("/education/{id}")
	public ResponseEntity<?> getEducationDetails(@PathVariable int id) {
		System.out.println("in jobseeker controller");
		return new ResponseEntity<>(jobSeekerService.getEducation(id), HttpStatus.OK);

		// return new RepsonseE jobSeekerService.getEducation(id);
	}

//	@del("/profile/id")
//	public String delalljs(@RequestBody ProfileDetail details)
//	{
	// Login l1=new login();
	// js.delete(l1);
	// https://stackoverflow.com/questions/28006309/hibernate-delete-the-parent-owner-while-keeping-the-child-in-one-to-one-relatio
//		return jobSeekerService.jobSeekerProfileDetails(details);
//	}
}
