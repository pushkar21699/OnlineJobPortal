package com.app.dao;

import java.util.ArrayList;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.app.pojos.JobPost;
import com.app.pojos.JobPostRequiredSkillSets;
import com.app.pojos.SkillType;

@Repository
public interface JobPostRequiredSkillSetsRepository extends JpaRepository<JobPostRequiredSkillSets, Integer> {

	/*
	 * select * from job_post_tbl where id IN(select job_post_id from
	 * job_post_skill_sets where skill_set_id = (select id from skill_sets_tbl where
	 * skill_type='PYTHON'));
	 */

	/*
	 * "Select * from Track where Trackid in (Select Tracks_trackid from Playlist_Track where Playlist_playlistid = '#WhicheverIdWasEntered')"
	 */
	/*
	 * "SELECT t FROM Track t where t.Trackid IN (SELECT pt.Tracks_trackid FROM Playlist_Track pt WHERE pt.Playlist_playlistid = :WhicheverIdWasEntered)"
	 */

	/*
	 * @Query("SELECT j FROM JobPost j where j.id IN (SELECT jp.id FROM JobPostRequiredSkillSets jp where jp.skillSetID=(select s from SkillSets s where s.skillType=:skillName))"
	 * ) List<JobPost> findBySkillName(@Param("skillName") SkillType skillName);
	 */
	// @Query(value = "CALL search_jobpost_by_skill_name(:skillName );", nativeQuery
	// = true)
	
	/*
	 * @Query("select j from JobPost j, JobPostRequiredSkillSets s where s.skillSetID.skillType=:skillName"
	 * ) List<JobPost> findBySkillName(@Param("skillName") SkillType skillName);
	 */
	
//	@Query("select j from JobPost j, JobPostRequiredSkillSets s where s.skillSetID.id=:skillId")
//	List<JobPost> findBySkillName(@Param("skillId") int skillId);
	
	@Query("select JobPostRequiredSkillSets s where s.skillSetID.id=:skillId")
	List<JobPostRequiredSkillSets> findBySkillName(@Param("skillId") int skillId);
	
	
//	@Query( "select o from MyObject o where inventoryId in :ids" )
//	List<MyObject> findByInventoryIds(@Param("ids") List<Long> inventoryIdList);
//	
	//to get jobList by multiple ids
	@Query("select j.jobPostID from JobPostRequiredSkillSets j where j.skillSetID.id in :skills")
	List<JobPost> findBySkillSetIDIn(@Param("skills") ArrayList<Integer> skills);
	

}
